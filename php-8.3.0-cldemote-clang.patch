diff -up php-src-php-8.3.0RC3/Zend/zend_cpuinfo.h.omv~ php-src-php-8.3.0RC3/Zend/zend_cpuinfo.h
--- php-src-php-8.3.0RC3/Zend/zend_cpuinfo.h.omv~	2023-09-27 16:06:09.571818837 +0200
+++ php-src-php-8.3.0RC3/Zend/zend_cpuinfo.h	2023-09-27 16:20:56.232946983 +0200
@@ -265,7 +265,16 @@ static inline int zend_cpu_supports_clde
 #if PHP_HAVE_BUILTIN_CPU_INIT
 	__builtin_cpu_init();
 #endif
+#ifdef __clang__
+	// bit 25 of the ECX register in sub-leaf 07H of CPUID
+	uint32_t op = 7, eax, ebx, ecx, edx;
+	asm volatile("cpuid\n"
+			: "=a" (eax), "=b" (ebx), "=c" (ecx), "=d" (edx)
+			: "a" (op));
+	return ecx & 0x2000000;
+#else
 	return __builtin_cpu_supports("cldemote");
+#endif
 }
 #endif
 
diff -up php-src-php-8.3.0RC3/ext/opcache/jit/zend_jit.c.omv~ php-src-php-8.3.0RC3/ext/opcache/jit/zend_jit.c
--- php-src-php-8.3.0RC3/ext/opcache/jit/zend_jit.c.omv~	2023-09-27 16:10:35.339889481 +0200
+++ php-src-php-8.3.0RC3/ext/opcache/jit/zend_jit.c	2023-09-27 16:24:18.910338199 +0200
@@ -158,7 +158,7 @@ static uint32_t zend_jit_trace_find_exit
 #pragma GCC target("cldemote")
 // check cldemote by CPUID when JIT startup
 static int cpu_support_cldemote = 0;
-static inline void shared_cacheline_demote(uintptr_t start, size_t size) {
+static inline __attribute__((target("cldemote"))) void shared_cacheline_demote(uintptr_t start, size_t size) {
     uintptr_t cache_line_base = start & ~0x3F;
     do {
         _cldemote((void *)cache_line_base);
